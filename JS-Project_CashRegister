function checkCashRegister(price, cash, cid) {

  var changeDue = cash - price;
  var availableChange = [];
  var totalCash = totalOfNestedArray(cid);
  var value;

  // this is a function to get the totalcash in the drawer
  function totalOfNestedArray (arr) {
    var total = arr.reduce((accum,nestedArr)=>{
      return accum + nestedArr[1];
    },0).toFixed(2);

 
  // this is an array of change from which change can be made.
  availableChange = cid.filter((value) => {
    return value[1]<changeDue && value[1] > 0;
  });

  // this is the total amount of change available from which exact change can possibly be made.
  var totalAvailableChange = totalOfNestedArray(availableChange);
  
   
  function valueFromString (str){
    switch (str) {
    case "PENNY":
        value = .01;
        break; 
    case "NICKEL":
        value = .05;
        break; 
     case "DIME":
        value = .10;
        break; 
    case "QUARTER":
        value = .25;
        break; 
     case "ONE":
        value = 1;
        break; 
    case "FIVE":
        value = 5;
        break; 
     case "TEN":
        value = 10;
        break; 
    case "TWENTY":
        value = 20;
        break; 
     case "HUNDRED":
        value = 100;
        break; 
    }
    return value;
  }


  if (totalCash < changeDue){
    return {status: "INSUFFICIENT_FUNDS", change: []} ;
  }else if(totalCash == changeDue){
    return {status: "CLOSED", change: [...cid]}
  }else if (totalCash > changeDue && totalAvailableChange < changeDue){
    return {status: "INSUFFICIENT_FUNDS", change: []} ;
  }else {
    return console.log("this is the open end");
  }

  }

  
  
 
}
